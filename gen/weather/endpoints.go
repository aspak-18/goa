// Code generated by goa v3.11.0, DO NOT EDIT.
//
// weather endpoints
//
// Command:
// $ goa gen example/design

package weather

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "weather" service endpoints.
type Endpoints struct {
	Show goa.Endpoint
}

// NewEndpoints wraps the methods of the "weather" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Show: NewShowEndpoint(s),
	}
}

// Use applies the given middleware to all the "weather" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Show = m(e.Show)
}

// NewShowEndpoint returns an endpoint function that calls the method "show" of
// service "weather".
func NewShowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ShowPayload)
		return s.Show(ctx, p)
	}
}
