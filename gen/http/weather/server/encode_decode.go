// Code generated by goa v3.11.0, DO NOT EDIT.
//
// weather HTTP server encoders and decoders
//
// Command:
// $ goa gen example/design

package server

import (
	"context"
	weather "example/gen/weather"
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// EncodeShowResponse returns an encoder for responses returned by the weather
// show endpoint.
func EncodeShowResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res, _ := v.(*weather.Weather)
		enc := encoder(ctx, w)
		body := NewShowResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeShowRequest returns a decoder for requests sent to the weather show
// endpoint.
func DecodeShowRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			city string

			params = mux.Vars(r)
		)
		city = params["city"]
		payload := NewShowPayload(city)

		return payload, nil
	}
}
